
 @using EventTicketingApp.Core.Domain.Enums
@model EventTicketingApp.Models.EventModell.UpdateEventRequest

@{
    ViewBag.Title = "Update Event";
}

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f4f6f9;
        color: #333;
    }

    .container {
        width: 90%;
        max-width: 800px;
        margin: auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    h2 {
        color: #4a90e2;
        text-align: center;
        margin-top: 20px;
        font-size: 28px;
        font-weight: 600;
    }

    .alert {
        padding: 10px;
        margin-bottom: 20px;
        border-radius: 5px;
        font-size: 16px;
    }

    .alert-success {
        background-color: #2ecc71;
        color: white;
    }

    .alert-danger {
        background-color: #e74c3c;
        color: white;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        border-radius: 5px;
        box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);
    }

    .btn-primary {
        background-color: #4a90e2;
        border: none;
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background-color: #357ab8;
        }

    .btn-back {
        background-color: #17a2b8;
        color: white;
        border-radius: 20px;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin-bottom: 20px;
    }

        .btn-back:hover {
            background-color: #138496;
            border-color: #117a8b;
        }

    .dropdown-menu {
        max-height: 200px;
        overflow-y: auto;
    }
</style>

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>@ViewBag.Title</h2>
        <a href="@Url.Action("EventOrganizerDashboard", "Authentication")" class="btn btn-back">Back to Dashboard</a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    @using (Html.BeginForm("UpdateEvent", "Event", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Description)
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 4 })
            @Html.ValidationMessageFor(m => m.Description)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.DateAndTime)
            @Html.EditorFor(m => m.DateAndTime, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.DateAndTime)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Duration)
            @Html.EditorFor(m => m.Duration, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Duration)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Venue)
            @Html.TextBoxFor(m => m.Venue, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Venue)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Type)
            @Html.DropDownListFor(m => m.Type, new SelectList(Enum.GetValues(typeof(EventType)).Cast<EventType>().Select(e => new { ID = e, Name = e.ToString() }), "ID", "Name"), "Select Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Type)
        </div>

        <button type="submit" class="btn btn-primary">Update Event</button>
        <a asp-action="GetEventsByEventOrganizerId" asp-controller="Event" class="btn btn-secondary">Back To List</a>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

